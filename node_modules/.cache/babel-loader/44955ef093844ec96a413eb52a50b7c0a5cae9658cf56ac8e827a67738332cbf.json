{"ast":null,"code":"import{useState,useEffect}from'react';export const useScroll=function(){let threshold=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;const[isScrolled,setIsScrolled]=useState(false);useEffect(()=>{const handleScroll=()=>{setIsScrolled(window.scrollY>threshold);};window.addEventListener('scroll',handleScroll);return()=>window.removeEventListener('scroll',handleScroll);},[threshold]);return isScrolled;};","map":{"version":3,"names":["useState","useEffect","useScroll","threshold","arguments","length","undefined","isScrolled","setIsScrolled","handleScroll","window","scrollY","addEventListener","removeEventListener"],"sources":["/Users/gio/Desktop/sistemas/KAWAI_SCRIPTURE_UNION/src/hooks/useScroll.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useScroll = (threshold = 50) => {\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > threshold);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [threshold]);\n\n  return isScrolled;\n}; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,MAAO,MAAM,CAAAC,SAAS,CAAG,QAAAA,CAAA,CAAoB,IAAnB,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACtC,KAAM,CAACG,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,YAAY,CAAGA,CAAA,GAAM,CACzBD,aAAa,CAACE,MAAM,CAACC,OAAO,CAAGR,SAAS,CAAC,CAC3C,CAAC,CAEDO,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CAC/C,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,YAAY,CAAC,CACjE,CAAC,CAAE,CAACN,SAAS,CAAC,CAAC,CAEf,MAAO,CAAAI,UAAU,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}