{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useScroll = (threshold = 50) => {\n  _s();\n  const [isScrolled, setIsScrolled] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > threshold);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [threshold]);\n  return isScrolled;\n};\n_s(useScroll, \"UCaI8lpZVGvPrsRoIFYRt2wv0+o=\");","map":{"version":3,"names":["useState","useEffect","useScroll","threshold","_s","isScrolled","setIsScrolled","handleScroll","window","scrollY","addEventListener","removeEventListener"],"sources":["/Users/gio/Desktop/sistemas/KAWAI_SCRIPTURE_UNION/src/hooks/useScroll.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useScroll = (threshold = 50) => {\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > threshold);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [threshold]);\n\n  return isScrolled;\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,SAAS,GAAGA,CAACC,SAAS,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMM,YAAY,GAAGA,CAAA,KAAM;MACzBD,aAAa,CAACE,MAAM,CAACC,OAAO,GAAGN,SAAS,CAAC;IAC3C,CAAC;IAEDK,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,OAAOE,UAAU;AACnB,CAAC;AAACD,EAAA,CAbWF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}